{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-11-15T17:10:11.760Z",
    "end": "2019-11-15T17:10:19.163Z",
    "duration": 7403,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dfa4fd55-8ff7-44f2-b863-07ad471a0c30",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f86833c-c520-4c35-9356-979f6d8d1b39",
          "title": "Testing Get Request",
          "fullFile": "/Users/h895456/Documents/WebDev/Flobiz/test/test.js",
          "file": "/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns all the records",
              "fullTitle": "Testing Get Request returns all the records",
              "timedOut": false,
              "duration": 1313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get({\n    url: baseUrl + '/rest/issues',\n    method: \"GET\",\n    headers: {\n        'Content-Type': 'application/xml',\n        'x-apikey': '5da6fb5d3cbe87164d4bb35d'\n    },\n},\n    function (error, response, body) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            try {\n                expect(response.statusCode).to.equal(200);\n                const bodyObj = JSON.parse(body);\n                console.log(bodyObj[0]);\n                done();\n            }\n            catch (e) {\n                done(e);\n            }\n        }\n    });",
              "err": {},
              "uuid": "389d416b-6d89-4816-9c65-d78c79c2e08f",
              "parentUUID": "5f86833c-c520-4c35-9356-979f6d8d1b39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the record using id",
              "fullTitle": "Testing Get Request returns the record using id",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get({\n    url: baseUrl + '/rest/issues/588893fbf54b5f59000003ce',\n    method: \"GET\",\n    headers: {\n        'Content-Type': 'application/xml',\n        'x-apikey': '5da6fb5d3cbe87164d4bb35d'\n    },\n},\n    function (error, response, body) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            try {\n                expect(response.statusCode).to.equal(200);\n                console.log(JSON.parse(body));\n                done();\n            }\n            catch (e) {\n                done(e);\n            }\n        }\n    });",
              "err": {},
              "uuid": "7307ad9f-35b9-48b5-a724-63a965684bfc",
              "parentUUID": "5f86833c-c520-4c35-9356-979f6d8d1b39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns The records using Email",
              "fullTitle": "Testing Get Request returns The records using Email",
              "timedOut": false,
              "duration": 1766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get({\n    url: baseUrl + '/rest/issues?fromemail=knutmt@gmail.com',\n    method: \"GET\",\n    headers: {\n        'Content-Type': 'application/xml',\n        'x-apikey': '5da6fb5d3cbe87164d4bb35d'\n    },\n},\n    function (error, response, body) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            try {\n                expect(response.statusCode).to.equal(200);\n                console.log(JSON.parse(body));\n                done();\n            }\n            catch (e) {\n                done(e);\n            }\n        }\n    });",
              "err": {},
              "uuid": "94b203be-ac64-4492-908d-6b3f47c9d87b",
              "parentUUID": "5f86833c-c520-4c35-9356-979f6d8d1b39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "389d416b-6d89-4816-9c65-d78c79c2e08f",
            "7307ad9f-35b9-48b5-a724-63a965684bfc",
            "94b203be-ac64-4492-908d-6b3f47c9d87b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3564,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "fe0f9f9a-5d40-4777-a354-80ff684113e2",
          "title": "Testing Put Request",
          "fullFile": "/Users/h895456/Documents/WebDev/Flobiz/test/test.js",
          "file": "/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns luke",
              "fullTitle": "Testing Put Request returns luke",
              "timedOut": false,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.put({\n    url: 'https://flobizhiring-57e6.restdb.io/rest/issues/5888abddf54b5f5900000409',\n    method: \"PUT\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Content-Length': Buffer.byteLength(JSON.stringify(putdata)),\n        'x-apikey': '5da6fb5d3cbe87164d4bb35d'\n    },\n    json: putdata\n},\n    function (error, response, body) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            try {\n                expect(response.statusCode).to.equal(200);\n                expect(response.body.title).to.equal(result);\n                done();\n            }\n            catch (e) {\n                done(e);\n            }\n        }\n    });",
              "err": {},
              "uuid": "b0a6b314-c82a-4f32-a071-3e17616b00bb",
              "parentUUID": "fe0f9f9a-5d40-4777-a354-80ff684113e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0a6b314-c82a-4f32-a071-3e17616b00bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "919223bc-285c-471a-bd4d-a4a76845936d",
          "title": "Testing POST Request",
          "fullFile": "/Users/h895456/Documents/WebDev/Flobiz/test/test.js",
          "file": "/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns luke",
              "fullTitle": "Testing POST Request returns luke",
              "timedOut": false,
              "duration": 3329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.post({\n    url: baseUrl + '/rest/issues',\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Content-Length': Buffer.byteLength(JSON.stringify(postdata)),\n        'x-apikey': '5da6fb5d3cbe87164d4bb35d'\n    },\n    json: postdata\n},\n    function (error, response, body) {\n        if (error) {\n            console.log(error);\n            done();\n        }\n        else {\n            try {\n                expect(response.statusCode).to.equal(201);\n                console.log(response.body);\n                done();\n            }\n            catch (e) {\n                done(e);\n            }\n        }\n    });",
              "err": {},
              "uuid": "9e1565d8-217f-4876-925b-b5f58d93be13",
              "parentUUID": "919223bc-285c-471a-bd4d-a4a76845936d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e1565d8-217f-4876-925b-b5f58d93be13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}